# Configuración del servidor para producción
server.port=${PORT:3000}

# Configuración de la base de datos en Render usando variables de entorno
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://dpg-d1o3stc9c44c73cic9u0-a.oregon-postgres.render.com:5432/db_appgym}
spring.datasource.username=${DB_USERNAME:admin}
spring.datasource.password=${DB_PASSWORD:SwAROiC65XDtbcBK2JltpgvOo4dUo5II}
spring.datasource.driver-class-name=org.postgresql.Driver



# Configuración de JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Configuración de logging para producción
logging.level.org.springframework=WARN
logging.level.com.cristian.backendgymapp=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Configuración de seguridad
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:admin123}
spring.security.user.roles=ADMIN

# Configuración de CORS
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Configuración de Swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true 